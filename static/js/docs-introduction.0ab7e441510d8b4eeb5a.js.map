{"version":3,"sources":["/Users/krishen/Documents/react-downscreen/src/DownscreenContext.ts","/Users/krishen/Documents/react-downscreen/src/useEffectAfterMount.ts","/Users/krishen/Documents/react-downscreen/src/getFirstPossibleIndex.ts","/Users/krishen/Documents/react-downscreen/src/getLastPossibleIndex.ts","/Users/krishen/Documents/react-downscreen/src/Downscreen.tsx","/Users/krishen/Documents/react-downscreen/src/normalizeArrowKey.ts","/Users/krishen/Documents/react-downscreen/src/getNextIndex.ts","/Users/krishen/Documents/react-downscreen/src/getPreviousIndex.ts","/Users/krishen/Documents/react-downscreen/src/Button.tsx","/Users/krishen/Documents/react-downscreen/src/Input.tsx","/Users/krishen/Documents/react-downscreen/src/Label.tsx","/Users/krishen/Documents/react-downscreen/src/Menu.tsx","/Users/krishen/Documents/react-downscreen/src/MenuItem.tsx","/Users/krishen/Documents/react-downscreen/src/docs/QuickExamples.tsx","/Users/krishen/Documents/react-downscreen/docs/Introduction.mdx"],"names":["initialState","isOpen","selectedIndex","highlightedIndex","inputValue","lastSelectedInputValue","lastKeyOnClose","DownscreenContext","React","state","setState","totalCount","id","getMenuItemsRef","current","useEffectAfterMount","cb","deps","justMounted","getFirstPossibleIndex","map","i","getLastPossibleIndex","Downscreen","_ref","className","style","children","_ref$onSelect","onSelect","_ref$initial","initial","menuItemsRef","_React$useState","_React$useState2","Object","slicedToArray","value","s","objectSpread","react","src_DownscreenContext","Provider","role","aria-haspopup","aria-expanded","aria-controls","concat","undefined","aria-owns","aria-labelledby","normalizeArrowKey","event","key","keyCode","indexOf","getNextIndex","currentIndex","getPreviousIndex","Button","props","objectWithoutProperties","_React$useContext","onBlur","onKeyUp","preventDefault","onKeyDown","onClick","target","focus","buttonChildren","assign","aria-label","data-toggle","type","Input","onChange","inputChildren","aria-autocomplete","aria-activedescendant","autoComplete","Label","htmlFor","Menu","menuChildren","Array","from","length","_","index","MenuItem","shouldScroll","scrollRef","defineProperty","scrollIntoViewIfNeeded","scrollMode","block","inline","onMouseMove","onMouseDown","ref","aria-selected","items","StyledButton","styled","_templateObject","StyledInput","_templateObject2","StyledLabel","_templateObject3","StyledMenu","_templateObject4","StyledMenuItem","_templateObject5","highlighted","_ref2","selected","QuickButtonExample","src","console","log","_ref3","QuickInputExample","_ref4","toLowerCase","includes","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","parentName","href","QuickExamples_QuickButtonExample","QuickExamples_QuickInputExample","isMDXComponent"],"mappings":"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","file":"static/js/docs-introduction.b915657d.js","sourcesContent":["import * as React from 'react';\nimport { Props } from './Downscreen';\n\nexport interface State {\n  isOpen: boolean;\n  selectedIndex: number | null;\n  highlightedIndex: number | null;\n  inputValue: string;\n  lastSelectedInputValue: string | null;\n  lastKeyOnClose: ' ' | 'Enter' | 'Escape' | 'ArrowUp' | 'ArrowDown' | null;\n}\n\nexport interface MenuItemsRef {\n  [key: string]: boolean;\n}\n\nexport const initialState = {\n  isOpen: false,\n  selectedIndex: null,\n  highlightedIndex: null,\n  inputValue: '',\n  lastSelectedInputValue: null,\n  lastKeyOnClose: null,\n};\n\nconst DownscreenContext = React.createContext<{\n  state: State;\n  setState: React.Dispatch<React.SetStateAction<State>>;\n  totalCount: Props['totalCount'];\n  id: Props['id'];\n  getMenuItemsRef: () => React.MutableRefObject<MenuItemsRef>;\n}>({\n  state: initialState,\n  setState: () => {},\n  totalCount: 0,\n  id: '',\n  getMenuItemsRef: () => ({\n    current: {},\n  }),\n});\n\nexport default DownscreenContext;\n","import * as React from 'react';\n\nconst useEffectAfterMount = (cb: () => void, deps: React.DependencyList) => {\n  const justMounted = React.useRef(true);\n\n  React.useEffect(() => {\n    if (!justMounted.current) {\n      return cb();\n    }\n\n    justMounted.current = false;\n  }, deps);\n};\n\nexport default useEffectAfterMount;\n","import { Props } from './Downscreen';\nimport { MenuItemsRef } from './DownscreenContext';\n\nconst getFirstPossibleIndex = (\n  totalCount: Props['totalCount'],\n  map: MenuItemsRef\n) => {\n  for (let i = 0; i < totalCount; i++) {\n    if (map[i]) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nexport default getFirstPossibleIndex;\n","import { Props } from './Downscreen';\nimport { MenuItemsRef } from './DownscreenContext';\n\nconst getLastPossibleIndex = (\n  totalCount: Props['totalCount'],\n  map: MenuItemsRef\n) => {\n  for (let i = totalCount - 1; i >= 0; i--) {\n    if (map[i]) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nexport default getLastPossibleIndex;\n","import * as React from 'react';\nimport DownscreenContext, {\n  initialState,\n  State,\n  MenuItemsRef,\n} from './DownscreenContext';\nimport useEffectAfterMount from './useEffectAfterMount';\nimport getFirstPossibleIndex from './getFirstPossibleIndex';\nimport getLastPossibleIndex from './getLastPossibleIndex';\n\n// TODO: extract custom hooks, break them down by domain\n// TODO: clean up state management (useReducer), memoize more for better performance (useMemo)\n\nexport interface Props {\n  children: React.ReactNode;\n  onSelect: (selectedIndex: State['selectedIndex']) => void;\n  initial?: State;\n  totalCount: number;\n  id: Required<React.HTMLAttributes<HTMLDivElement>['id']>;\n  className?: React.HTMLAttributes<HTMLDivElement>['className'];\n  style?: React.HTMLAttributes<HTMLDivElement>['style'];\n}\n\nconst Downscreen = ({\n  className,\n  style,\n  children,\n  onSelect = () => {},\n  initial = initialState,\n  totalCount,\n  id,\n}: Props) => {\n  const menuItemsRef = React.useRef<MenuItemsRef>({});\n  const [state, setState] = React.useState<State>(initial);\n  const value = React.useMemo(\n    () => ({\n      state,\n      setState,\n      totalCount,\n      id,\n      getMenuItemsRef: () => menuItemsRef,\n    }),\n    [state, totalCount, id]\n  );\n\n  useEffectAfterMount(() => {\n    if (state.isOpen) {\n      switch (state.lastKeyOnClose) {\n        case 'ArrowUp': {\n          setState(s => ({\n            ...s,\n            highlightedIndex: getLastPossibleIndex(\n              totalCount,\n              menuItemsRef.current\n            ),\n            lastKeyOnClose: null,\n          }));\n\n          break;\n        }\n        case 'ArrowDown': {\n          setState(s => ({\n            ...s,\n            highlightedIndex: getFirstPossibleIndex(\n              totalCount,\n              menuItemsRef.current\n            ),\n            lastKeyOnClose: null,\n          }));\n\n          break;\n        }\n      }\n    }\n  }, [state.isOpen]);\n\n  useEffectAfterMount(() => {\n    onSelect(state.selectedIndex);\n  }, [state.selectedIndex]);\n\n  return (\n    <DownscreenContext.Provider value={value}>\n      <div\n        id={id}\n        role=\"combobox\"\n        aria-haspopup=\"listbox\"\n        aria-expanded={state.isOpen}\n        aria-controls={state.isOpen ? `${id}-menu` : undefined}\n        aria-owns={state.isOpen ? `${id}-menu` : undefined}\n        aria-labelledby={`${id}-label`}\n        className={className}\n        style={style}\n      >\n        {children}\n      </div>\n    </DownscreenContext.Provider>\n  );\n};\n\nexport default Downscreen;\n","const normalizeArrowKey = (event: React.KeyboardEvent<HTMLDivElement>) => {\n  const { key, keyCode } = event;\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`;\n  }\n\n  return key;\n};\n\nexport default normalizeArrowKey;\n","import getFirstPossibleIndex from './getFirstPossibleIndex';\nimport { State, MenuItemsRef } from './DownscreenContext';\nimport { Props } from './Downscreen';\n\nconst getNextIndex = (\n  currentIndex: State['highlightedIndex'],\n  totalCount: Props['totalCount'],\n  map: MenuItemsRef\n) => {\n  for (\n    let i = currentIndex === null ? 0 : currentIndex + 1;\n    i < totalCount;\n    i++\n  ) {\n    if (map[i]) {\n      return i;\n    }\n  }\n\n  return getFirstPossibleIndex(totalCount, map);\n};\n\nexport default getNextIndex;\n","import getLastPossibleIndex from './getLastPossibleIndex';\nimport { State, MenuItemsRef } from './DownscreenContext';\nimport { Props } from './Downscreen';\n\nconst getPreviousIndex = (\n  currentIndex: State['highlightedIndex'],\n  totalCount: Props['totalCount'],\n  map: MenuItemsRef\n) => {\n  if (currentIndex !== null) {\n    for (let i = currentIndex - 1; i >= 0; i--) {\n      if (map[i]) {\n        return i;\n      }\n    }\n  }\n\n  return getLastPossibleIndex(totalCount, map);\n};\n\nexport default getPreviousIndex;\n","import * as React from 'react';\nimport DownscreenContext, { State } from './DownscreenContext';\nimport normalizeArrowKey from './normalizeArrowKey';\nimport getNextIndex from './getNextIndex';\nimport getPreviousIndex from './getPreviousIndex';\n\ntype Props = React.HTMLAttributes<HTMLButtonElement> & {\n  children: (selectedIndex: State['selectedIndex']) => React.ReactNode;\n};\n\nconst Button = ({ children, ...props }: Props) => {\n  const { state, setState, totalCount, id, getMenuItemsRef } = React.useContext(\n    DownscreenContext\n  );\n\n  const onBlur = React.useCallback(() => {\n    setState(s => ({\n      ...s,\n      isOpen: false,\n      highlightedIndex: null,\n    }));\n  }, []);\n\n  const onKeyUp = React.useCallback(event => {\n    event.preventDefault();\n  }, []);\n\n  const onKeyDown = React.useCallback(\n    event => {\n      const key = normalizeArrowKey(event);\n\n      switch (key) {\n        case ' ': {\n          event.preventDefault();\n\n          setState(s => ({\n            ...s,\n            isOpen: !s.isOpen,\n            highlightedIndex: null,\n          }));\n\n          break;\n        }\n        case 'Enter': {\n          if (state.isOpen) {\n            event.preventDefault();\n\n            setState(s => ({\n              ...s,\n              isOpen: false,\n              selectedIndex:\n                s.highlightedIndex === null\n                  ? s.selectedIndex\n                  : s.highlightedIndex,\n              highlightedIndex: null,\n            }));\n          }\n\n          break;\n        }\n        case 'Escape': {\n          event.preventDefault();\n\n          setState(s => ({\n            ...s,\n            isOpen: false,\n            selectedIndex: null,\n            highlightedIndex: null,\n            inputValue: '',\n            lastSelectedInputValue: null,\n          }));\n\n          break;\n        }\n        case 'ArrowUp': {\n          event.preventDefault();\n\n          if (state.isOpen) {\n            setState(s => ({\n              ...s,\n              highlightedIndex: getPreviousIndex(\n                s.highlightedIndex,\n                totalCount,\n                getMenuItemsRef().current\n              ),\n            }));\n          } else {\n            setState(s => ({\n              ...s,\n              isOpen: true,\n              lastKeyOnClose: 'ArrowUp',\n            }));\n          }\n\n          break;\n        }\n        case 'ArrowDown': {\n          event.preventDefault();\n\n          if (state.isOpen) {\n            setState(s => ({\n              ...s,\n              highlightedIndex: getNextIndex(\n                s.highlightedIndex,\n                totalCount,\n                getMenuItemsRef().current\n              ),\n            }));\n          } else {\n            setState(s => ({\n              ...s,\n              isOpen: true,\n              lastKeyOnClose: 'ArrowDown',\n            }));\n          }\n\n          break;\n        }\n      }\n    },\n    [totalCount, state.highlightedIndex, state.isOpen]\n  );\n\n  const onClick = React.useCallback(event => {\n    event.preventDefault();\n    event.target.focus();\n\n    setState(s => ({\n      ...s,\n      isOpen: !s.isOpen,\n    }));\n  }, []);\n\n  const buttonChildren = React.useMemo(() => children(state.selectedIndex), [\n    state.selectedIndex,\n  ]);\n\n  return (\n    <button\n      aria-label={state.isOpen ? 'close menu' : 'open menu'}\n      aria-haspopup\n      data-toggle\n      id={`${id}-button`}\n      role=\"button\"\n      type=\"button\"\n      onBlur={onBlur}\n      onKeyUp={onKeyUp}\n      onKeyDown={onKeyDown}\n      onClick={onClick}\n      {...props}\n    >\n      {buttonChildren}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as React from 'react';\nimport DownscreenContext, { State } from './DownscreenContext';\nimport useEffectAfterMount from './useEffectAfterMount';\nimport normalizeArrowKey from './normalizeArrowKey';\nimport getNextIndex from './getNextIndex';\nimport getPreviousIndex from './getPreviousIndex';\n\ntype Props = React.HTMLAttributes<HTMLInputElement> & {\n  children: (\n    selectedIndex: State['selectedIndex']\n  ) => string | false | null | undefined;\n};\n\nconst Input = ({ children, ...props }: Props) => {\n  const { state, setState, totalCount, id, getMenuItemsRef } = React.useContext(\n    DownscreenContext\n  );\n\n  const onChange = React.useCallback(event => {\n    const {\n      target: { value: inputValue },\n    } = event;\n\n    setState(s => ({\n      ...s,\n      isOpen: true,\n      highlightedIndex: null,\n      inputValue,\n    }));\n  }, []);\n\n  const onBlur = React.useCallback(() => {\n    setState(s => ({\n      ...s,\n      isOpen: false,\n      highlightedIndex: null,\n      inputValue:\n        typeof s.lastSelectedInputValue === 'string'\n          ? s.lastSelectedInputValue\n          : s.inputValue,\n    }));\n  }, []);\n\n  const onKeyDown = React.useCallback(\n    event => {\n      const key = normalizeArrowKey(event);\n\n      switch (key) {\n        case 'Enter': {\n          if (state.isOpen) {\n            event.preventDefault();\n\n            setState(s => ({\n              ...s,\n              isOpen: false,\n              selectedIndex:\n                s.highlightedIndex === null\n                  ? s.selectedIndex\n                  : s.highlightedIndex,\n              highlightedIndex: null,\n              inputValue:\n                typeof s.lastSelectedInputValue === 'string' &&\n                s.selectedIndex === s.highlightedIndex\n                  ? s.lastSelectedInputValue\n                  : s.inputValue,\n            }));\n          }\n\n          break;\n        }\n        case 'Escape': {\n          event.preventDefault();\n\n          setState(s => ({\n            ...s,\n            isOpen: false,\n            selectedIndex: null,\n            highlightedIndex: null,\n            inputValue: '',\n            lastSelectedInputValue: null,\n          }));\n\n          break;\n        }\n        case 'End':\n        case 'ArrowUp': {\n          event.preventDefault();\n\n          if (state.isOpen) {\n            setState(s => ({\n              ...s,\n              highlightedIndex: getPreviousIndex(\n                s.highlightedIndex,\n                totalCount,\n                getMenuItemsRef().current\n              ),\n            }));\n          } else {\n            setState(s => ({\n              ...s,\n              isOpen: true,\n              lastKeyOnClose: 'ArrowUp',\n            }));\n          }\n\n          break;\n        }\n        case 'Home':\n        case 'ArrowDown': {\n          event.preventDefault();\n\n          if (state.isOpen) {\n            setState(s => ({\n              ...s,\n              highlightedIndex: getNextIndex(\n                s.highlightedIndex,\n                totalCount,\n                getMenuItemsRef().current\n              ),\n            }));\n          } else {\n            setState(s => ({\n              ...s,\n              isOpen: true,\n              lastKeyOnClose: 'ArrowDown',\n            }));\n          }\n\n          break;\n        }\n      }\n    },\n    [totalCount, state.highlightedIndex, state.isOpen]\n  );\n\n  const inputChildren = React.useMemo(() => children(state.selectedIndex), [\n    state.selectedIndex,\n  ]);\n\n  useEffectAfterMount(() => {\n    setState(s => ({\n      ...s,\n      inputValue:\n        typeof inputChildren === 'string' ? inputChildren : s.inputValue,\n      lastSelectedInputValue:\n        typeof inputChildren === 'string'\n          ? inputChildren\n          : s.lastSelectedInputValue,\n    }));\n  }, [inputChildren]);\n\n  return (\n    <input\n      aria-autocomplete=\"list\"\n      aria-activedescendant={\n        state.isOpen && state.highlightedIndex !== null\n          ? `${id}-menu-item-${state.highlightedIndex}`\n          : undefined\n      }\n      aria-controls={state.isOpen ? `${id}-menu` : undefined}\n      aria-labelledby={`${id}-label`}\n      autoComplete=\"off\"\n      id={`${id}-input`}\n      type=\"text\"\n      value={state.inputValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      {...props}\n    />\n  );\n};\n\nexport default Input;\n","import * as React from 'react';\nimport DownscreenContext from './DownscreenContext';\n\ntype Props = React.HTMLAttributes<HTMLLabelElement>;\n\nconst Label = (props: Props) => {\n  const { id } = React.useContext(DownscreenContext);\n\n  return <label id={`${id}-label`} htmlFor={`${id}-input`} {...props} />;\n};\n\nexport default Label;\n","import * as React from 'react';\nimport DownscreenContext, { State } from './DownscreenContext';\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  children: (args: {\n    index: number;\n    selectedIndex: State['selectedIndex'];\n    highlightedIndex: State['highlightedIndex'];\n    inputValue: State['inputValue'];\n  }) => React.ReactNode;\n};\n\nconst Menu = ({ children, ...props }: Props) => {\n  const { state, totalCount, id } = React.useContext(DownscreenContext);\n\n  const menuChildren = React.useMemo(\n    () =>\n      Array.from(\n        {\n          length: totalCount,\n        },\n        (_, index) =>\n          children({\n            index,\n            selectedIndex: state.selectedIndex,\n            highlightedIndex: state.highlightedIndex,\n            inputValue: state.inputValue,\n          })\n      ),\n    [state.selectedIndex, state.highlightedIndex, state.inputValue]\n  );\n\n  return state.isOpen ? (\n    <div id={`${id}-menu`} role=\"listbox\" {...props}>\n      {menuChildren}\n    </div>\n  ) : null;\n};\n\nexport default Menu;\n","import * as React from 'react';\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed';\nimport DownscreenContext from './DownscreenContext';\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  index: number;\n  children: React.ReactNode;\n};\n\nconst MenuItem = ({ index, children, ...props }: Props) => {\n  const { state, setState, id, getMenuItemsRef } = React.useContext(\n    DownscreenContext\n  );\n\n  const shouldScroll = React.useRef<boolean>(true);\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    getMenuItemsRef().current = {\n      ...getMenuItemsRef().current,\n      [index]: true,\n    };\n\n    return () => {\n      getMenuItemsRef().current = {\n        ...getMenuItemsRef().current,\n        [index]: false,\n      };\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      state.highlightedIndex === index &&\n      shouldScroll.current &&\n      scrollRef.current\n    ) {\n      scrollIntoViewIfNeeded(scrollRef.current, {\n        scrollMode: 'if-needed',\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    }\n\n    if (!shouldScroll.current) {\n      shouldScroll.current = true;\n    }\n  }, [state.highlightedIndex, index]);\n\n  const onClick = React.useCallback(() => {\n    setState(s => ({\n      ...s,\n      isOpen: false,\n      selectedIndex: index,\n      highlightedIndex: null,\n      inputValue:\n        typeof s.lastSelectedInputValue === 'string' &&\n        s.selectedIndex === s.highlightedIndex\n          ? s.lastSelectedInputValue\n          : s.inputValue,\n    }));\n  }, [index]);\n\n  const onMouseMove = React.useCallback(() => {\n    if (state.highlightedIndex !== index) {\n      shouldScroll.current = false;\n\n      setState(s => ({\n        ...s,\n        highlightedIndex: index,\n      }));\n    }\n  }, [state.highlightedIndex, index]);\n\n  const onMouseDown = React.useCallback(event => {\n    event.preventDefault();\n  }, []);\n\n  return (\n    <div\n      ref={scrollRef}\n      aria-selected={state.highlightedIndex === index}\n      id={`${id}-menu-item-${index}`}\n      role=\"option\"\n      onClick={onClick}\n      onMouseMove={onMouseMove}\n      onMouseDown={onMouseDown}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MenuItem;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport Downscreen, { Button, Input, Label, Menu, MenuItem } from '..';\n\nconst items = [\n  {\n    id: '1',\n    value: 'apple',\n  },\n  {\n    id: '2',\n    value: 'banana',\n  },\n  {\n    id: '3',\n    value: 'pear',\n  },\n  {\n    id: '4',\n    value: 'watermelon',\n  },\n  {\n    id: '5',\n    value: 'lemon',\n  },\n  {\n    id: '6',\n    value: 'orange',\n  },\n  {\n    id: '7',\n    value: 'dragonfruit',\n  },\n  {\n    id: '8',\n    value: 'papaya',\n  },\n];\n\nconst StyledButton = styled(Button)`\n  background: white;\n  border-radius: 3px;\n  border: 2px solid orange;\n  color: orange;\n  cursor: pointer;\n  font-size: 16px;\n  padding: 4px 16px;\n  width: 240px;\n\n  &:focus {\n    box-shadow: 0 0 0 3px lightblue, 0 0 0 1.5px lightblue;\n    outline: none;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  background: white;\n  border: 1px solid orange;\n  border-radius: 3px;\n  color: orange;\n  font-size: 16px;\n  padding: 4px 8px;\n  width: 222px;\n\n  &:focus {\n    box-shadow: 0 0 0 3px lightblue, 0 0 0 1.5px lightblue;\n    outline: none;\n  }\n`;\n\nconst StyledLabel = styled(Label)`\n  display: block;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0 0 8px;\n  width: 240px;\n`;\n\nconst StyledMenu = styled(Menu)`\n  background: white;\n  box-shadow: 0px 8px 16px 0px lightgray;\n  position: absolute;\n  width: 240px;\n  z-index: 1000;\n`;\n\nconst StyledMenuItem = styled(MenuItem)<{\n  selected: boolean;\n  highlighted: boolean;\n}>`\n  background: ${({ highlighted }) => (highlighted ? 'lightgray' : 'white')};\n  color: palevioletred;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: ${({ selected }) => (selected ? 'bold' : 'normal')};\n  padding: 8px 16px;\n`;\n\nexport const QuickButtonExample = () => {\n  return (\n    <Downscreen\n      onSelect={console.log}\n      totalCount={items.length}\n      id=\"quick-button-example\"\n    >\n      <StyledButton>\n        {selectedIndex =>\n          selectedIndex === null ? '(nothing)' : items[selectedIndex].value\n        }\n      </StyledButton>\n      <StyledMenu>\n        {({ index, selectedIndex, highlightedIndex }) => (\n          <StyledMenuItem\n            key={items[index].id}\n            index={index}\n            selected={selectedIndex === index}\n            highlighted={highlightedIndex === index}\n          >\n            {items[index].value}\n          </StyledMenuItem>\n        )}\n      </StyledMenu>\n    </Downscreen>\n  );\n};\n\nexport const QuickInputExample = () => {\n  return (\n    <Downscreen\n      onSelect={console.log}\n      totalCount={items.length}\n      id=\"quick-input-example\"\n    >\n      <StyledLabel>Select:</StyledLabel>\n      <StyledInput>\n        {selectedIndex =>\n          selectedIndex === null ? null : items[selectedIndex].value\n        }\n      </StyledInput>\n      <StyledMenu>\n        {({ index, selectedIndex, highlightedIndex, inputValue }) =>\n          items[index].value\n            .toLowerCase()\n            .includes(inputValue.toLowerCase()) && (\n            <StyledMenuItem\n              key={items[index].id}\n              index={index}\n              selected={selectedIndex === index}\n              highlighted={highlightedIndex === index}\n            >\n              {items[index].value}\n            </StyledMenuItem>\n          )\n        }\n      </StyledMenu>\n    </Downscreen>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {\n  QuickButtonExample,\n  QuickInputExample,\n} from '../src/docs/QuickExamples';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p><strong parentName=\"p\">{`React Downscreen ⛹️`}</strong>{` - A simple framework for building accessibility-friendly selects, dropdowns, autocompletes, and comboboxes in React. Heavily inspired by `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/downshift-js/downshift\"\n      }}>{`the excellent library Downshift`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: React 16.8+ is required.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"with-npm\"\n    }}>{`With `}<inlineCode parentName=\"h3\">{`npm`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm i react-downscreen\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"with-yarn\"\n    }}>{`With `}<inlineCode parentName=\"h3\">{`yarn`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add react-downscreen\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"quick-examples\"\n    }}>{`Quick Examples`}</h2>\n\n    <QuickButtonExample mdxType=\"QuickButtonExample\" />\n    <br />\n    <QuickInputExample mdxType=\"QuickInputExample\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import * as React from 'react';\nimport Downscreen, {\n  Button,\n  Input,\n  Label,\n  Menu,\n  MenuItem,\n} from 'react-downscreen';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const items = [\n  {\n    id: '1',\n    value: 'apple',\n  },\n  {\n    id: '2',\n    value: 'banana',\n  },\n  {\n    id: '3',\n    value: 'pear',\n  },\n  {\n    id: '4',\n    value: 'watermelon',\n  },\n  {\n    id: '5',\n    value: 'lemon',\n  },\n  {\n    id: '6',\n    value: 'orange',\n  },\n  {\n    id: '7',\n    value: 'dragonfruit',\n  },\n  {\n    id: '8',\n    value: 'papaya',\n  },\n];\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Downscreen\n  onSelect={console.log}\n  totalCount={items.length}\n  id=\"quick-button-example\"\n>\n  <Button>\n    {selectedIndex =>\n      selectedIndex === null ? '(nothing)' : items[selectedIndex].value\n    }\n  </Button>\n  <Menu>\n    {({ index, selectedIndex, highlightedIndex }) => (\n      <MenuItem\n        key={items[index].id}\n        index={index}\n        style={{\n          background: highlightedIndex === index ? 'lightgray' : 'white',\n          fontWeight: selectedIndex === index ? 'bold' : 'normal',\n        }}\n      >\n        {items[index].value}\n      </MenuItem>\n    )}\n  </Menu>\n</Downscreen>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Downscreen\n  onSelect={console.log}\n  totalCount={items.length}\n  id=\"quick-input-example\"\n>\n  <Label>Select:</Label>\n  <Input>\n    {selectedIndex =>\n      selectedIndex === null ? null : items[selectedIndex].value\n    }\n  </Input>\n  <Menu>\n    {({ index, selectedIndex, highlightedIndex, inputValue }) =>\n      items[index].value.toLowerCase().includes(inputValue.toLowerCase()) && (\n        <MenuItem\n          key={items[index].id}\n          index={index}\n          style={{\n            background: highlightedIndex === index ? 'lightgray' : 'white',\n            fontWeight: selectedIndex === index ? 'bold' : 'normal',\n          }}\n        >\n          {items[index].value}\n        </MenuItem>\n      )\n    }\n  </Menu>\n</Downscreen>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}